{
  "hash": "3d864fd28bdfa7a9fcc109ca4b810abe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Randomly Testing Negative\"\nauthor: \"Raza\"\ndate: \"2024-11-21\"\ncategories: [Transfusion]\ndraft: draft \n---\n\n\nSuppose you have a blood test with 10 parameters, e.g. the complete blood count\n\nWhat are the chances that you get a randomly abnormal result by chance?\n\nConsider that tests are defined as abnormal if they fall outside the 95% confidence interval.\n\nWe can show this region of 'abnormality' on a normal distribution (light red below)\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nThis would seem to imply that for every 20 tests you run, you would expect at least one to be 'abnormal' by chance. However, this assumes those tests are completley independent.\n\nWhat if we test the scenario where they are not completely independent, but rather intercorrelated?\n\nWe can model this by considering subsets of intercorrelated events. For ease of plotting, we will consider a 10 test scenario:\n\n-   Consider the following scenarios, where 0 of the tests were intercorrelated (independence), compared with the scenario where 2, 4, 6... or all 20 of the tests were intercorrelated.\n\n-   We can also check this against the degree of intercorrelation, and how that influences the probability of getting at least 1 'abnormal' result by chance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define constants\np <- 0.95 # Base probability\nn <- 10 # Total number of events\ncorrelated_subsets <- seq(0, n, by = 2) # Subsets of intercorrelated events\ncorrelation_values <- seq(0, 1, length.out = 100) # Correlation values from 0 to 100%\n\n# Function to calculate probability for a subset of intercorrelated events\ncalculate_probability <- function(subset, r) {\n    if (subset == 0) {\n        return(p^n) # All events are independent\n    }\n    independent_events <- n - subset\n    (1-(p^subset * (1 + (subset - 1) * r)) * (p^independent_events))\n}\n\n# Create a grid of plots\npar(mfrow = c(2, 3)) # Adjust grid layout (3x3 for up to 9 subsets)\n\n# Generate plots for each subset\nfor (subset in correlated_subsets) {\n    probabilities <- sapply(correlation_values, function(r) min(calculate_probability(subset, r), 1))\n    plot(\n        correlation_values * 100, probabilities,\n        type = \"l\", col = \"blue\", lwd = 2,\n        xlab = \"Correlation (%)\", ylab = \"Probability\",\n        main = paste(subset, \"Correlated Tests\"),\n        xaxt = \"n\", yaxt = \"n\",\n        ylim = c(0, 1) # Force y-axis to start at 0 and end at 1\n    )\n    axis(1, at = seq(0, 100, by = 10), labels = seq(0, 100, by = 10)) # X-axis ticks\n    axis(2, at = seq(0, 1, by = 0.1), labels = seq(0, 1, by = 0.1))   # Y-axis ticks\n    abline(h = 1, col = \"red\", lty = 2) # 100% cap line\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nHere we see that although for 10 independent tests, the probability of a randomly abnormal result is indeed around 60%, this probability drops very quickly either correlation increases, or the number of correlated events increases. For instance, if 2 of the tests are 20% intercorrelated, the chances of a randomly abnormal result out of 10 drops to about 30%, and if 4 of the tests were intercorrelated at 20%, this probability essentially drops to 0.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}